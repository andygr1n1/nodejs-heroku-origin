{
    "env": {
        "es2021": true,
        "node": true
    },

    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "plugin:eslint-plugin/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript"
    ],
    "plugins": ["@typescript-eslint", "eslint-plugin", "import", "prettier"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "project": "./tsconfig.json"
    },
    "settings": {
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "alias": {
                "map": [["@", "./src"]],
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        }
    },
    "rules": {
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/ban-ts-comment": "off",
        "prettier/prettier": "error",
        "eslint-plugin/prefer-message-ids": "off",
        "eslint-plugin/require-meta-schema": "off",
        "eslint-plugin/require-meta-type": "off",
        "eslint-plugin/prefer-object-rule": "off",
        "import/no-unresolved": "error",
        "import/order": [
            "error",
            {
                "groups": [["builtin", "external", "internal"]],
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "external",
                        "position": "before"
                    }
                ],
                "pathGroupsExcludedImportTypes": ["builtin"],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
        // e.g. "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/consistent-type-imports": "error"
    }
}
