version: '3'
networks:
    gold-timer-network:
        name: gold-timer-network
services:
    nodejs-heroku-origin:
        image: andygr1n1/nodejs-heroku-origin
        container_name: nodejs-heroku-origin-container
        ports:
            - '8008:8008'
        env_file:
            - .env
        networks:
            - gold-timer-network

    postgres:
        image: postgres:14.7
        container_name: postgres-kzen
        volumes:
            - ./db_data:/var/lib/postgresql/data/pgdata  # Bind mount from host directory
        environment:
            POSTGRES_PASSWORD: grini
            POSTGRES_USER: postgres
            PGDATA: /var/lib/postgresql/data/pgdata  # Set PGDATA environment variable
            # mkdir db_data
            # chmod 700 db_data
            # chown $(whoami):$(whoami) db_data
        ports:
            - '6008:5432'
        networks:
            - gold-timer-network

    graphql-engine:
        image: hasura/graphql-engine:v2.42.0
        container_name: graphql-engine-kzen
        ports:
            - '7008:8080'
        depends_on:
            - 'postgres'
        networks:
            - gold-timer-network
        environment:
            ## postgres database to store Hasura metadata
            HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:grini@postgres:5432/postgres
            ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
            PG_DATABASE_URL: postgres://postgres:grini@postgres:5432/postgres
            ## enable the console served by server
            HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "false" to disable console
            ## enable debugging mode. It is recommended to disable this in production
            HASURA_GRAPHQL_DEV_MODE: 'true'
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
            # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
            ## uncomment next line to set an admin secret
            # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
            HASURA_GRAPHQL_ADMIN_SECRET: grini
            HASURA_GRAPHQL_JWT_SECRET: '{"type": "HS256", "key": "EiunNL3hbmBb6k6oYrRjeYSZ8ko_Vy9Elzpt-vc78se_DpYUK8bw1JNn4hA8Z1sx","claims_map": { "x-hasura-allowed-roles":{"path":"$$.allowed-roles"}, "x-hasura-default-role":{"path":"$$.role"}, "x-hasura-user-id":{"path":"$$.id"} } }'
            DATABASE_URL: postgres://cmfedroyqtfnkp:grini@postgres:5432/public
            AUTO_RITUALIZE_GOALS_URL: http://172.17.0.1:8008/kzen/auto-ritualize-goals
            HEROKU_NODE_ORIGIN: http://host.docker.internal:8008
            DESTROY_KZEN_OUTDATED_ARTIFACTS_URL: http://172.17.0.1:8008/kzen/destroy-data

    nginx:
        image: nginx
        container_name: nginx-proxy-nodejs-heroku-origin
        ports:
            - '80:80'
            - '443:443'
            - '444:444'
            - '445:445'
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - /etc/letsencrypt:/etc/letsencrypt:ro
        depends_on:
            - nodejs-heroku-origin
        networks:
            - gold-timer-network
volumes:
    db_data:
